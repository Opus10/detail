[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
target-version = ['py37']
skip-string-normalization = true

[tool.coverage.run]
branch = true
source = ["detail"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "pass",
    "pytest.mark.skip"
]
show_missing = true
fail_under = 100

[tool.poetry]
name = "detail"
packages = [
  { include = "detail" }
]
version = "0.0.0"
description = "Build automations off of structured notes in your project"
authors = ["Opus 10 Engineering"]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3 :: Only",
]
license = "BSD-3-Clause"
readme = "README.rst"
homepage = "https://github.com/Opus10/detail"
repository = "https://github.com/Opus10/detail"
documentation = "https://detail.readthedocs.io"

[tool.poetry.dependencies]
python = ">=3.7.0,<4"

[tool.poetry.dev-dependencies]
black = "22.1.0"
flake8 = "3.9.2"
flake8-bugbear = "22.1.11"
flake8-comprehensions = "3.8.0"
flake8-import-order = "0.18.1"
flake8-logging-format = "0.6.0"
flake8-mutable = "1.2.0"
git-tidy = "1.1.1"
pytest = "6.2.5"
pytest-cov = "3.0.0"
Sphinx = "4.4.0"
sphinx-rtd-theme = "1.0.0"
temple = "*"
tox = "3.24.5"

[tool.pytest.ini_options]
xfail_strict = true
testpaths = "detail/tests"
norecursedirs = ".venv"
